{"version":3,"sources":["const/const.js","hooks/useApi.js","store/actionTypes.js","store/actions.js","components/Forms/Form.reducer.js","components/Forms/Form.handlers.js","components/Tasks/Task.status.js","components/Forms/Form.add.component.js","components/Tasks/TaskRow.component.js","components/Loading/Loading.component.js","components/Tasks/TasksTableHead.component.js","components/Tasks/TasksTable.component.js","components/Pagination/PageItem.component.js","components/Pagination/Pagination.component.js","components/Navbar/Navbar.component.js","components/Forms/Form.login.component.js","store/reducer.js","components/Alert/Alert.component.js","App.js","reportWebVitals.js","index.js"],"names":["ABC","useApi","url","useState","isLoading","setLoading","response","setResponse","error","setError","options","setOptions","apiBase","developer","doApiFetch","useCallback","method","params","form","useEffect","axiosOptions","baseURL","headers","data","a","axios","then","status","Error","message","catch","fetchData","SET_ACTIVE_PAGE","SORTING_TASKS","SET_TASKS","SET_TASK","SET_EDITED_TASK","SET_FORM_DATA","CLEAR_FORM","SET_TOKEN","SET_EDIT_ID","SET_ERROR","setFormData","field","value","type","payload","clearForm","setToken","token","setEditId","id","taskId","reducer","state","action","Object","entries","prepareForm","dataObject","FormData","append","toString","statusList","0","1","10","11","getStatus","getEditStatus","done","Math","round","adminEdit","initialState","Form","setTaskToState","setEditedTaskToState","taskToEdit","setId","useReducer","dispatch","setUrl","setDone","setAdminEdit","editedTask","setEditedTask","setFormValue","e","currentTarget","dataset","clearFormData","onSubmit","preventDefault","task","className","htmlFor","data-field","onChange","username","disabled","email","text","checked","role","TaskRow","isLoggedIn","onEditClick","scope","data-id","onClick","icon","faEdit","Loading","loading","TasksTableHead","names","sorting","sortTasks","map","name","key","direction","toLowerCase","href","data-direction","faSortUp","faSortDown","TaskTable","tasks","tBody","push","PageItem","i","onPageClick","data-page","Pagination","total","activePage","count","ceil","pagination","pageItem","Navbar","logout","to","FormLogin","console","log","autoComplete","password","totalTaskCount","length","idx","findIndex","tasksWithEditEl","splice","timestamp","Date","getTime","errorMessages","Alert","dismiss","messages","data-bs-dismiss","aria-label","App","setFetchData","setTasksToState","setTasks","setTask","setTokenToState","parseInt","setErrorMessage","getTaskToEdit","sort_field","sort_direction","page","total_task_count","path","sortingTasks","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGaA,EAAM,MCyDJC,EAzDA,SAAAC,GACd,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,mBAAS,IAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EDRY,qDCSZC,EDRkB,kBCUlBC,EAAaC,uBAAY,WAAmB,IAAlBL,EAAiB,uDAAP,GACzCC,EAAWD,GACXH,EAAY,MACZE,EAAS,MACTJ,GAAW,KACT,IAEH,EAAuCK,EAAhCM,cAAP,MAAgB,MAAhB,EAAuBC,EAAgBP,EAAhBO,OAAQC,EAAQR,EAARQ,KAsC/B,OApCAC,qBAAU,WAET,GAAKf,EAAL,CAEA,IAIMgB,EAAe,CACpBJ,OAAQA,EACRK,QAAST,EACTV,MACAoB,QARe,CACf,eAA2B,SAAXN,EAAmB,sBAAwB,oBAQ3DC,OAAQA,EAAM,2BAAOA,GAAP,IAAeJ,cAAa,CAACA,aAC3CU,KAAiB,QAAXP,EAAmBE,EAAO,OAGlB,uCAAG,sBAAAM,EAAA,sEACXC,IAAML,GACVM,MAAK,SAACpB,GAEN,GADAD,GAAW,GACkB,OAAzBC,EAASiB,KAAKI,OAAiB,CAClC,IAAMnB,EAAQ,IAAIoB,MAElB,MADApB,EAAMqB,QAAUvB,EAASiB,KAAKM,QACxBrB,EAEPD,EAAYD,EAASiB,SAErBO,OAAM,SAACtB,GACPH,GAAW,GACXI,EAASD,EAAMqB,YAbA,2CAAH,qDAiBfE,MACE,CAAC3B,EAAWQ,EAASC,EAAWK,EAAMF,EAAQC,EAAQf,IAClD,CAAC,CAACE,YAAWE,WAAUE,SAAQM,ICzD1BkB,EAAkB,gBAClBC,EAAgB,eAChBC,EAAY,WACZC,EAAW,UACXC,EAAkB,gBAClBC,EAAgB,cAChBC,EAAa,YACbC,EAAY,WACZC,EAAc,YACdC,EAAY,WCsCZC,EAAc,SAACC,EAAOC,GAAR,MAC1B,CACCC,KAAMR,EACNS,QAAS,CACRH,QACAC,WAKUG,EAAY,iBACxB,CACCF,KAAMP,IAIKU,EAAW,SAACC,GAAD,MACvB,CACCJ,KAAMN,EACNO,QAAS,CACRG,WAKUC,EAAY,SAACC,GAAD,MACxB,CACCN,KAAML,EACNM,QAAS,CACRM,OAAQD,K,QC1EEE,EAAU,SAACC,EAAOC,GAC9B,OAAQA,EAAOV,MACd,KAAKR,EACJ,OAAO,2BACHiB,GADJ,kBAEEC,EAAOT,QAAQH,MAAQY,EAAOT,QAAQF,QAIzC,KAAKN,EAEJ,IADA,IAAMf,EAAO+B,EACb,MAAsBE,OAAOC,QAAQlC,GAArC,eAA2C,CAC1CA,EADI,wBACU,GAEf,OAAOA,EAGR,QACC,OAAO+B,ICpBGI,EAAc,SAACC,GAE3B,IADA,IAAIzC,EAAO,IAAI0C,SACf,MAA6BJ,OAAOC,QAAQE,GAA5C,eAAyD,CAApD,0BAAOhB,EAAP,KAAcC,EAAd,KACJ1B,EAAK2C,OAAOlB,EAAOC,EAAMkB,YAE1B,OAAO5C,GCLF6C,EAAa,CAClBC,EAAG,2GACHC,EAAG,kPACHC,GAAI,8FACJC,GAAI,4OAGQC,EAAY,SAACzC,GACzB,OAAOoC,EAAWpC,IAGN0C,EAAgB,SAAC1C,GAG7B,MAAO,CACN2C,KAHYC,KAAKC,MAAM7C,EAAS,IAIhC8C,UAHkB9C,EAAS,K,OCNvB+C,EAAe,GAgINC,EA9HF,SAAC,GAAgF,IAA/EC,EAA8E,EAA9EA,eAAgBC,EAA8D,EAA9DA,qBAAsBC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,MAAO9B,EAAqB,EAArBA,MAAOxC,EAAc,EAAdA,SAC9E,EAA0BuE,qBAAW3B,EAASqB,GAA9C,mBAAOpB,EAAP,KAAc2B,EAAd,KACA,EAAsB9E,oBAAS,WAC9B,OAAO2E,EAAU,gBAAYA,EAAW3B,IAAO,aADhD,mBAAOjD,EAAP,KAAYgF,EAAZ,KAGA,EAAmDjF,EAAOC,GAA1D,0BAAQI,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,MAAOJ,EAAzB,EAAyBA,UAAYU,EAArC,KACA,EAAwBX,oBAAS,kBAAM2E,EAAqD,GAAxCT,EAAcS,EAAWnD,QAAQ2C,KAAY,KAAjG,mBAAOA,EAAP,KAAaa,EAAb,KAEA,EAAkChF,oBAAS,kBAAM2E,EAAaT,EAAcS,EAAWnD,QAAS8C,UAAY,KAA5G,mBAAOA,EAAP,KAAkBW,EAAlB,KACA,EAAoCjF,mBAAS,MAA7C,mBAAOkF,EAAP,KAAmBC,EAAnB,KAEMC,EAAe,SAACC,GACrB,MAAkCA,EAAEC,cAA7B7C,EAAP,EAAOA,MAAiBD,EAAxB,EAAc+C,QAAU/C,MACpBmC,IAAeL,GAAWW,EAAa,GAC3CH,EAASvC,EAAYC,EAAOC,KAGvB+C,EAAgB5E,uBAAY,WACjCkE,EAASlC,OACP,IAEG6C,EAAQ,uCAAG,WAAOJ,GAAP,iBAAAhE,EAAA,6DAChBgE,EAAEK,iBACI3E,EAAOwC,EAAYJ,GACrBwB,IACHI,EAAO,SAAD,OAAUJ,EAAW3B,KAC3BjC,EAAK2C,OAAO,UAAWS,EAAKG,GAAWX,YACvC5C,EAAK2C,OAAO,QAASZ,IAElB6B,IACGgB,EADS,2BACExC,GADF,IACS3B,OAAQ2C,EAAKG,IACrCa,EAAcQ,IAVC,SAYVhF,EAAW,CAChBE,OAAQ,OACRE,SAde,OAiBhByE,IACAZ,EAAM,MAlBU,2CAAH,sDA4Cd,OAvBA5D,qBAAU,WACT,GAAK2D,EAAL,CACA,cAA2BtB,OAAOC,QAAQqB,GAA1C,eAAuD,CAAlD,0BAAKnC,EAAL,KAAYC,EAAZ,KACJqC,EAASvC,EAAYC,EAAOC,IAE7BuC,EAAgD,GAAxCd,EAAcS,EAAWnD,QAAQ2C,SACvC,CAACQ,IAEJ3D,qBAAU,YACJb,GAAaE,KACdA,EACHC,EAASD,GAGNF,EAASuB,QACZ+C,EAAetE,EAASuB,UAGzBgD,EAAqBQ,GAErBH,EAAO,eACL,CAACG,EAAY/E,EAAUuE,EAAsBD,EAAgBpE,EAAOC,IAGtE,uBACCsF,UAAW,OACXH,SAAUA,EAFX,UAIC,sBAAKG,UAAW,OAAhB,UACC,uBAAOC,QAAS,WAAYD,UAAW,aAAvC,uBACA,uBACClD,KAAM,OACNkD,UAAW,eACX5C,GAAI,WACJ8C,aAAY,WACZC,SAAUX,EACV3C,MAAOU,EAAM6C,UAAY,GACzBC,SAAUhG,GAAa0E,OAGzB,sBAAKiB,UAAW,OAAhB,UACC,uBAAOC,QAAQ,YAAYD,UAAU,aAArC,mBACA,uBACClD,KAAK,QACLkD,UAAU,eACV5C,GAAG,YACH8C,aAAY,QACZC,SAAUX,EACV3C,MAAOU,EAAM+C,OAAS,GACtBD,SAAUhG,GAAa0E,OAGzB,sBAAKiB,UAAW,OAAhB,UACC,uBAAOC,QAAQ,WAAWD,UAAU,aAApC,uBACA,0BACCA,UAAU,eACV5C,GAAG,WACH8C,aAAY,OACZC,SAAUX,EACV3C,MAAOU,EAAMgD,MAAQ,GACrBF,SAAUhG,OAIX0E,GACA,sBAAKiB,UAAU,kBAAf,UACC,uBAAOA,UAAU,mBAAmBlD,KAAK,WAAW0D,QAAkB,KAATjC,EAAanB,GAAG,OAAO+C,SAAU,kBAA4Bf,EAArBb,EAA6B,EAAd,OACnH,uBAAOyB,UAAU,mBAAmBC,QAAQ,OAA5C,0BAKH,yBACCnD,KAAK,SACLkD,UAAU,kBACVK,SAAUhG,EAHX,UAKEA,GAAa,sBAAM2F,UAAU,mCAAmCS,KAAK,WALvE,c,gBC5FYC,EA1BC,SAAC,GAAkE,IAAjEtD,EAAgE,EAAhEA,GAAIgD,EAA4D,EAA5DA,SAAUE,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,KAAM3E,EAAqC,EAArCA,OAAQ+E,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YAChE,OACC,+BACC,oBAAIC,MAAO,MAAX,SAAmBzD,IACnB,6BAAKgD,IACL,6BAAKE,IACL,6BAAKC,IACL,6BAAKlC,EAAUzC,KAEd+E,GACA,6BAEC,mBACC7D,KAAK,SACLkD,UAAU,kBACVc,UAAS1D,EACT2D,QAASH,EAJV,SAMC,cAAC,IAAD,CAAiBI,KAAMC,cCRdC,EAbC,SAAC,GAChB,OAD8B,EAAbC,QAKhB,qBAAKnB,UAAU,oCAAf,SACC,qBAAKA,UAAU,iBAAiBS,KAAK,SAArC,SACC,sBAAMT,UAAU,kBAAhB,4BALK,MCmCMoB,EAlCQ,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UACxC,OAAOF,EAAMG,KAAI,SAACC,EAAMC,GACvB,IAAIC,EAAY1H,EAKhB,OAJIwH,EAAKG,gBAAkBN,EAAQ1E,QAClC+E,EAAYA,IAAcL,EAAQK,UVLjB,OUKoC1H,GAG3B,SAAvBwH,EAAKG,cACD,oBAAIf,MAAO,MAAX,SAA6BY,GAANC,GAG9B,oBACCb,MAAM,MADP,SAKC,oBACCgB,KAAM,GACNd,QAASQ,EACTrB,aAAYuB,EAAKG,cACjBE,iBAAgBH,EAJjB,UAMEF,EAEAH,EAAQ1E,QAAU6E,EAAKG,eACvB,cAAC,IAAD,CAAiBZ,KAAOW,IAAc1H,EAAM8H,IAAWC,UAZpDN,OCeMO,EA5BG,SAAC,GAAmE,IAAlEC,EAAiE,EAAjEA,MAAOf,EAA0D,EAA1DA,QAASG,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,UAAWZ,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,YACnE,GAAIO,EACH,OAAO,cAAC,EAAD,CAASA,QAASA,IAE1B,IAAMgB,EAAQD,EAAMV,KAAI,SAAAzB,GACvB,OACC,cAAC,EAAD,yBAAuBY,WAAYA,GAAgBZ,GAAnD,IAAyDa,YAAaA,IAAxDb,EAAK3C,OAIfiE,EAAQ,CAAC,KAAM,OAAQ,QAAS,cAAe,UAIrD,OAFIV,GAAYU,EAAMe,KAAK,QAG1B,wBAAOpC,UAAW,QAAlB,UACC,gCACC,6BACC,cAAC,EAAD,CAAgBqB,MAAOA,EAAOC,QAASA,EAASC,UAAWA,QAG7D,iCACGJ,GAAWgB,Q,QCTFE,EAhBE,SAAC,GAAiC,IAAhCrC,EAA+B,EAA/BA,UAAWsC,EAAoB,EAApBA,EAAGC,EAAiB,EAAjBA,YAChC,OACC,oBAAIvC,UAAWA,EAAf,SAEC,mBACCA,UAAU,YACV6B,KAAK,GACLW,YAAWF,EACXvB,QAASwB,EAJV,SAMED,KAR4BA,IC6ClBG,EA7CI,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,WAAYJ,EAAiB,EAAjBA,YACjCK,EAAQpE,KAAKqE,KAAKH,EbLI,GaO5B,GAAc,IAAVE,GAAyB,IAAVA,EAClB,OAAO,KAIR,IADA,IAAIE,EAAa,GACRR,EAAE,EAAGA,GAAGM,EAAON,IAAK,CAC5B,IAAMtC,EAAYsC,IAAMK,EAAa,mBAAqB,YACpDI,EAAW,cAAC,EAAD,CAAkB/C,UAAWA,EAAWsC,EAAGA,EAAGC,YAAaA,GAA5CD,GAChCQ,EAAU,sBAAOA,GAAP,CAAmBC,IAG9B,OACC,8BACC,qBAAI/C,UAAU,oCAAd,UACC,oBAAIA,UAAS,oBAA8B,IAAf2C,EAAmB,WAAa,IAA5D,SAEC,mBACC3C,UAAU,YACVe,QAASwB,EACTT,kBAAiB,EACjBD,KAAM,GAJP,oBASAiB,EACD,oBAAI9C,UAAS,oBAAe2C,IAAeC,EAAQ,WAAa,IAAhE,SAEC,mBACC5C,UAAU,YACVe,QAASwB,EACTT,iBAAgB,EAChBD,KAAM,GAJP,0B,QCJUmB,EA5BA,SAAC,GAA0B,IAAzBrC,EAAwB,EAAxBA,WAAYsC,EAAY,EAAZA,OAC5B,OACC,qBAAKjD,UAAU,gDAAf,SACC,sBAAKA,UAAU,kBAAf,UACC,cAAC,IAAD,CAAMkD,GAAI,IAAKlD,UAAW,eAA1B,kBACA,iCAEGW,GACD,oBAAIX,UAAU,kCAAd,SACC,oBAAIA,UAAU,WAAd,SACC,cAAC,IAAD,CAAMkD,GAAI,SAAUlD,UAAW,WAA/B,uBAKFW,GACA,oBAAIX,UAAU,kCAAd,SACC,oBAAIA,UAAU,WAAd,SACC,cAAC,IAAD,CAAMkD,GAAI,IAAKlD,UAAW,WAAYe,QAASkC,EAA/C,iC,OCfFtE,EAAe,GA6ENwE,EA3EG,SAAC,GAA0B,IAAzBlG,EAAwB,EAAxBA,SAAUvC,EAAc,EAAdA,SAC7B,EAA0BuE,qBAAW3B,EAASqB,GAA9C,mBAAOpB,EAAP,KAAc2B,EAAd,KACA,EAAmDhF,EAAO,UAA1D,0BAAQK,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,MAAOJ,EAAzB,EAAyBA,UAAYU,EAArC,KAEMyE,EAAe,SAACC,GACrB,MAAkCA,EAAEC,cAA7B7C,EAAP,EAAOA,MAAiBD,EAAxB,EAAc+C,QAAU/C,MACxBsC,EAASvC,EAAYC,EAAOC,KAGvB+C,EAAgB5E,uBAAY,WACjCkE,EAASlC,OACP,IAcH,OAZA5B,qBAAU,WACT,GAAKb,GAAaE,EAClB,OAAIA,GACH2I,QAAQC,IAAI5I,QACZC,EAASD,SAGNF,EAASuB,SACZmB,EAAS1C,EAASuB,QAAQoB,UAEzB,CAAC3C,EAAU0C,EAAUxC,EAAOC,IAG9B,uBACCsF,UAAW,OACXH,SAAQ,uCAAE,WAAOJ,GAAP,eAAAhE,EAAA,6DACTgE,EAAEK,iBACI3E,EAAOwC,EAAYJ,GAFhB,SAGHxC,EAAW,CAChBE,OAAQ,OACRE,SALQ,OAOTyE,IAPS,2CAAF,sDAFT,UAYC,sBAAKI,UAAW,OAAhB,UACC,uBAAOC,QAAS,WAAYD,UAAW,aAAvC,uBACA,uBACClD,KAAM,OACNkD,UAAW,eACX5C,GAAI,WACJ8C,aAAY,WACZC,SAAUX,EACV3C,MAAOU,EAAM6C,UAAY,GACzBC,SAAUhG,OAGZ,sBAAK2F,UAAW,OAAhB,UACC,uBAAOC,QAAQ,eAAeD,UAAU,aAAxC,sBACA,uBACClD,KAAK,WACLkD,UAAU,eACV5C,GAAG,eACHkG,aAAc,QACdpD,aAAY,WACZC,SAAUX,EACV3C,MAAOU,EAAMgG,UAAY,GACzBlD,SAAUhG,OAGZ,yBACCyC,KAAK,SACLkD,UAAU,kBACVK,SAAUhG,EAHX,UAKEA,GAAa,sBAAM2F,UAAU,mCAAmCS,KAAK,WALvE,eC5DUnD,EAAU,SAACC,EAAOC,GAC9B,OAAQA,EAAOV,MACd,KAAKb,EACJ,OAAO,2BACHsB,GADJ,IAECoF,WAAYnF,EAAOT,QAAQ4F,aAI7B,KAAKzG,EACJ,OAAO,2BACHqB,GADJ,IAEC+D,QAAS,CACR1E,MAAOY,EAAOT,QAAQH,MACtB+E,UAAWnE,EAAOT,QAAQ4E,aAK7B,KAAKxF,EACJ,OAAO,2BACHoB,GADJ,IAEC2E,MAAO1E,EAAOT,QAAQmF,MACtBsB,eAAgBhG,EAAOT,QAAQyG,iBAIjC,KAAKpH,EACJ,OhBvC0B,IgBuCtBmB,EAAM2E,MAAMuB,OACR,2BACHlG,GADJ,IAECiG,eAAgBjG,EAAMiG,eAAiB,IAGlC,2BACHjG,GADJ,IAEC2E,MAAM,GAAD,mBAAM3E,EAAM2E,OAAZ,CAAmB1E,EAAOT,UAC/ByG,eAAgBjG,EAAMiG,eAAiB,IAIzC,KAAKnH,EACJ,IAAMqH,EAAMnG,EAAM2E,MAAMyB,WAAU,SAAA5D,GACjC,OAAOA,EAAK3C,KAAOI,EAAOT,QAAQgD,KAAK3C,MAEpCwG,EAAkBrG,EAAM2E,MAE5B,OADA0B,EAAgBC,OAAOH,EAAK,EAAGlG,EAAOT,QAAQgD,MACvC,2BACHxC,GADJ,IAEC2E,MAAO0B,IAIT,KAAKpH,EACJ,IAAMsH,GAAY,IAAIC,MAAOC,UAC7B,OAAO,2BACHzG,GADJ,IAECL,MAAOM,EAAOT,QAAQG,MACtB4G,cAIF,KAAKrH,EACJ,OAAO,2BACHc,GADJ,IAECF,OAAQG,EAAOT,QAAQM,SAIzB,KAAKX,EACJ,IAAIuH,EAAgB,GACpB,GAAoC,kBAAzBzG,EAAOT,QAAQtC,MACzB,cAA2BgD,OAAOC,QAAQF,EAAOT,QAAQtC,OAAzD,eAAiE,CAA5D,0BAAKmC,EAAL,KAAYC,EAAZ,KACJoH,EAAc7B,KAAd,UAAsBxF,EAAtB,cAAiCC,IAMnC,MAHoC,kBAAzBW,EAAOT,QAAQtC,OACzBwJ,EAAc7B,KAAK5E,EAAOT,QAAQtC,OAE5B,2BACH8C,GADJ,IAEC9C,MAAOwJ,IAIT,QACC,OAAO1G,IC5EK2G,GAnBD,SAAC,GAAsB,IAArBzJ,EAAoB,EAApBA,MAAO0J,EAAa,EAAbA,QACtB,IAAK1J,EAAMgJ,OAAQ,OAAO,KAC1B,IAAMW,EAAW3J,EAAM+G,KAAI,SAAC1F,EAAS4F,GAAV,OAAkB,4BAAc5F,GAAN4F,MACrD,OACC,sBAAK1B,UAAU,iDAAiDS,KAAK,QAArE,UACE2D,EACD,wBACCtH,KAAK,SACLkD,UAAU,YACVqE,kBAAgB,QAChBC,aAAW,QACXvD,QAAS,WACRoD,EAAQ,WCQPxF,GAAe,CACpBgE,WAAY,EACZT,MAAO,GACPsB,eAAgB,EAChBlC,QAAS,CACR1E,MAAO,KACP+E,UAAW,OAEZzE,MAAO,KACP4G,UAAW,KACXzG,OAAQ,KACR5C,MAAO,IA8IO8J,OA3If,WACC,IAqDqBrH,EAAO4G,EArD5B,EAA0B7E,qBAAW3B,EAASqB,IAA9C,mBAAOpB,EAAP,KAAc2B,EAAd,KACA,EAAmDhF,EAAO,KAA1D,0BAAQK,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,MAAOJ,EAAzB,EAAyBA,UAAYU,EAArC,KACA,EAAkCX,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBwI,EAAlB,KAiBMC,EAAkBzJ,uBAAY,SAACkH,EAAOQ,GAC3CxD,Ef3BsB,SAACgD,EAAOsB,GAAR,MACvB,CACC1G,KAAMX,EACNY,QAAS,CACRmF,QACAsB,gBAAiBA,IesBTkB,CAASxC,EAAOQ,MACvB,IAEG7D,EAAiB7D,uBAAY,SAAC+E,GACnCb,EfrBqB,SAACa,GAAD,MACtB,CACCjD,KAAMV,EACNW,QAASgD,GekBA4E,CAAQ5E,MACf,IAEGjB,EAAuB9D,uBAAY,SAAC+E,GACzCb,EfgB2B,SAACa,GAAD,MAC5B,CACCjD,KAAMT,EACNU,QAAS,CACRgD,SepBQR,CAAcQ,MACrB,IAEG6E,EAAkB5J,uBAAY,SAACkC,GACpCgC,EAASjC,EAASC,MAChB,IAEG8B,EAAQhE,uBAAY,SAACyE,GAC1B,GAAKA,EAAL,CAIA,IAAOrC,EAAMqC,EAAEC,cAAcC,QAAtBvC,GACP8B,EAAS/B,EAAU0H,SAASzH,UAJ3B8B,EAAS/B,EAAU,SAKlB,IAEG2H,EAAkB9J,uBAAY,SAACP,GACpCyE,EfQsB,SAACzE,GAAD,MACvB,CACCqC,KAAMJ,EACNK,QAAS,CACRtC,UeZQC,CAASD,MAChB,IAoBGkG,GAbezD,EAaUK,EAAML,MAbT4G,EAagBvG,EAAMuG,aAZ5C5G,IAAU4G,OACX5G,IAAS4G,KACA,IAAIC,MAAOC,UACVF,ElBzFe,OkBoGxB/E,EApBgB,SAAC3B,EAAI8E,GAC1B,IAAMwB,EAAMxB,EAAMyB,WAAU,SAAA5D,GAAI,OAAIA,EAAK3C,KAAOA,KAChD,OAAO8E,EAAMwB,GAkBKqB,CAAcxH,EAAMF,OAAQE,EAAM2E,OA0BrD,OAxBA9G,qBAAU,WACT,GAAKY,EAAL,CACA,IAAO2G,EAA2CpF,EAA3CoF,WAAP,EAAkDpF,EAA/B+D,QAAU1E,EAA7B,EAA6BA,MAAO+E,EAApC,EAAoCA,UACpC5G,EAAW,CACVG,OAAQ,CACP8J,WAAYpI,EACZqI,eAAgBtD,EAChBuD,KAAMvC,EAAW5E,cAGnByG,GAAa,MACX,CAACzJ,EAAYR,EAAUgD,EAAOvB,IAEjCZ,qBAAU,WACT,IAAKb,GAAaE,KACdA,GACHqK,EAAgBrK,GAEbF,GAAYA,EAASuB,SAAS,CACjC,MAA6DvB,EAAtDuB,QAAUoG,EAAjB,EAAiBA,MAAyBsB,EAA1C,EAAwB2B,iBACxBV,EAAgBvC,EAAOsB,MAEtB,CAACjJ,EAAUE,EAAOgK,EAAiBK,IAGrC,qBAAK9E,UAAU,MAAf,SACC,eAAC,IAAD,WACC,cAAC,EAAD,CAAQW,WAAYA,EAAYsC,OAnCpB,WACd/D,EAASjC,EAAS,UAmChB,qBAAK+C,UAAW,YAAhB,SACC,qBAAKA,UAAW,MAAhB,SACC,sBAAKA,UAAW,MAAhB,UACC,cAAC,GAAD,CAAOvF,MAAO8C,EAAM9C,MAAO0J,QAASW,IACpC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOM,KAAM,SAAb,SACEzE,EAAa,cAAC,IAAD,CAAUuC,GAAG,MAAQ,cAAC,EAAD,CAAWjG,SAAU2H,EAAiBlK,SAAUoK,MAEpF,eAAC,IAAD,CAAOM,KAAM,IAAb,UACC,cAAC,EAAD,CACCvG,eAAgBA,EAChBC,qBAAsBA,EACtBC,WAAYA,EACZC,MAAOA,EACP9B,MAAOK,EAAML,MACbxC,SAAUoK,IAEX,cAAC,EAAD,CACC5C,MAAO3E,EAAM2E,MACbf,QAAS9G,EACTkH,UA1GS,SAAC9B,GAClBA,EAAEK,iBACF,MAA2BL,EAAEC,cAAcC,QAApC/C,EAAP,EAAOA,MAAO+E,EAAd,EAAcA,UACdzC,EfhC0B,SAACtC,EAAO+E,GAAR,MAC3B,CACC7E,KAAMZ,EACNa,QAAS,CACRH,QACA+E,ce2BQ0D,CAAazI,EAAO+E,IAC7B6C,GAAa,IAuGLlD,QAAS/D,EAAM+D,QACfX,WAAYA,EACZC,YAAa5B,IAEd,cAAC,EAAD,CACC0D,MAAOnF,EAAMiG,eACbb,WAAYpF,EAAMoF,WAClBJ,YA1HgB,SAAC9C,GACzBA,EAAEK,iBACF,MAAiDL,EAAEC,cAAcC,QAAjE,IAAOuF,YAAP,MAAc3H,EAAMoF,WAApB,MAAgChB,UAEhCzC,EfjCD,CACCpC,KAAMb,EACNc,QAAS,CACR4F,Ye6BmBuC,UADpB,MAA4C,EAA5C,MAGAV,GAAa,yBClCAc,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.33ffc09d.chunk.js","sourcesContent":["export const TASK_PER_PAGE = 3;\r\nexport const URL = 'https://uxcandy.com/~shapoval/test-task-backend/v2'\r\nexport const DEVELOPER = 'Artemiy Zebzeev'\r\nexport const ABC = 'abc';\r\nexport const DESC = 'desc';\r\nexport const TOKEN_LIFE_TIME = 24 * 60 * 60 * 1000;","import {useState, useEffect, useCallback} from 'react';\r\nimport axios from 'axios';\r\nimport {DEVELOPER, URL} from \"../const/const\";\r\nconst useApi = url => {\r\n\tconst [isLoading, setLoading] = useState(false);\r\n\tconst [response, setResponse] = useState(null);\r\n\tconst [error, setError] = useState(null);\r\n\tconst [options, setOptions] = useState({});\r\n\t\r\n\tconst apiBase = URL;\r\n\tconst developer = DEVELOPER;\r\n\t\r\n\tconst doApiFetch = useCallback((options = {}) => {\r\n\t\tsetOptions(options);\r\n\t\tsetResponse(null);\r\n\t\tsetError(null);\r\n\t\tsetLoading(true);\r\n\t}, []);\r\n\t\r\n\tconst {method = 'GET', params, form} = options;\r\n\t\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tif (!isLoading) return;\r\n\t\t\r\n\t\tconst headers = {\r\n\t\t\t'Content-Type': method === 'POST'? 'multipart/form-data' : 'application/json',\r\n\t\t}\r\n\t\t\r\n\t\tconst axiosOptions = {\r\n\t\t\tmethod: method,\r\n\t\t\tbaseURL: apiBase,\r\n\t\t\turl,\r\n\t\t\theaders,\r\n\t\t\tparams: params ? {...params, developer} : {developer},\r\n\t\t\tdata: method !== 'GET' ? form : null,\r\n\t\t}\r\n\t\t\r\n\t\tconst fetchData = async () => {\r\n\t\t\tawait axios(axiosOptions)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tif (response.data.status !== 'ok') {\r\n\t\t\t\t\t\tconst error = new Error();\r\n\t\t\t\t\t\terror.message = response.data.message;\r\n\t\t\t\t\t\tthrow error;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetResponse(response.data);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t\tsetError(error.message);\r\n\t\t\t\t})\r\n\t\t}\r\n\t\t\r\n\t\tfetchData();\r\n\t}, [isLoading, apiBase, developer, form, method, params, url]);\r\n\treturn [{isLoading, response, error}, doApiFetch];\r\n}\r\n\r\nexport default useApi;\r\n","export const SET_ACTIVE_PAGE = 'setActivePage';\r\nexport const SORTING_TASKS = 'sortingTasks';\r\nexport const SET_TASKS = 'setTasks';\r\nexport const SET_TASK = 'setTask';\r\nexport const SET_EDITED_TASK = 'setEditedTask';\r\nexport const SET_FORM_DATA = 'setFormData';\r\nexport const CLEAR_FORM = 'clearForm';\r\nexport const SET_TOKEN = 'setToken';\r\nexport const SET_EDIT_ID = 'setEditId';\r\nexport const SET_ERROR = 'setError';","import {\r\n\tCLEAR_FORM,\r\n\tSET_ACTIVE_PAGE,\r\n\tSET_EDIT_ID, SET_EDITED_TASK, SET_ERROR,\r\n\tSET_FORM_DATA,\r\n\tSET_TASK,\r\n\tSET_TASKS,\r\n\tSET_TOKEN,\r\n\tSORTING_TASKS\r\n} from \"./actionTypes\";\r\n\r\nexport const setActivePage = (activePage) => (\r\n\t{\r\n\t\ttype: SET_ACTIVE_PAGE,\r\n\t\tpayload: {\r\n\t\t\tactivePage\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const sortingTasks = (field, direction) => (\r\n\t{\r\n\t\ttype: SORTING_TASKS,\r\n\t\tpayload: {\r\n\t\t\tfield,\r\n\t\t\tdirection\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const setTasks = (tasks, totalTaskCount) => (\r\n\t{\r\n\t\ttype: SET_TASKS,\r\n\t\tpayload: {\r\n\t\t\ttasks,\r\n\t\t\ttotalTaskCount: +totalTaskCount\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const setTask = (task) => (\r\n\t{\r\n\t\ttype: SET_TASK,\r\n\t\tpayload: task\r\n\t}\r\n)\r\n\r\nexport const setFormData = (field, value) => (\r\n\t{\r\n\t\ttype: SET_FORM_DATA,\r\n\t\tpayload: {\r\n\t\t\tfield,\r\n\t\t\tvalue\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const clearForm = () => (\r\n\t{\r\n\t\ttype: CLEAR_FORM\r\n\t}\r\n)\r\n\r\nexport const setToken = (token) => (\r\n\t{\r\n\t\ttype: SET_TOKEN,\r\n\t\tpayload: {\r\n\t\t\ttoken\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const setEditId = (id) => (\r\n\t{\r\n\t\ttype: SET_EDIT_ID,\r\n\t\tpayload: {\r\n\t\t\ttaskId: id\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const setEditedTask = (task) => (\r\n\t{\r\n\t\ttype: SET_EDITED_TASK,\r\n\t\tpayload: {\r\n\t\t\ttask\r\n\t\t}\r\n\t}\r\n)\r\n\r\nexport const setError = (error) => (\r\n\t{\r\n\t\ttype: SET_ERROR,\r\n\t\tpayload: {\r\n\t\t\terror\r\n\t\t}\r\n\t}\r\n)","import {CLEAR_FORM, SET_FORM_DATA} from \"../../store/actionTypes\";\r\n\r\nexport const reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_FORM_DATA: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[action.payload.field]: action.payload.value\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase CLEAR_FORM: {\r\n\t\t\tconst data = state;\r\n\t\t\tfor (const [field] of Object.entries(data)){\r\n\t\t\t\tdata[field] = '';\r\n\t\t\t}\r\n\t\t\treturn data;\r\n\t\t}\r\n\t\t\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}","export const prepareForm = (dataObject) => {\r\n\tlet form = new FormData();\r\n\tfor (const [field, value] of Object.entries(dataObject)) {\r\n\t\tform.append(field, value.toString());\r\n\t}\r\n\treturn form;\r\n}\r\n\r\n","const statusList = {\r\n\t0: 'Задача не выполнена',\r\n\t1: 'Задача не выполнена, отредактирована админом',\r\n\t10: 'Задача выполнена',\r\n\t11: 'Задача отредактирована админом и выполнена'\r\n}\r\n\r\nexport const getStatus = (status) => {\r\n\treturn statusList[status];\r\n}\r\n\r\nexport const getEditStatus = (status) => {\r\n\tconst done = Math.round(status / 10);\r\n\tconst adminEdit = (status % 10);\r\n\treturn {\r\n\t\tdone,\r\n\t\tadminEdit\r\n\t}\r\n}","import React, {useCallback, useEffect, useReducer, useState} from 'react';\r\nimport useApi from \"../../hooks/useApi\";\r\nimport {clearForm, setFormData} from \"../../store/actions\";\r\nimport {reducer} from \"./Form.reducer\";\r\nimport {prepareForm} from \"./Form.handlers\";\r\nimport {getEditStatus} from \"../Tasks/Task.status\";\r\n\r\nconst initialState = {};\r\n\r\nconst Form = ({setTaskToState, setEditedTaskToState, taskToEdit, setId, token, setError}) => {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\tconst [url, setUrl] = useState(() => {\r\n\t\treturn taskToEdit ? `/edit/${taskToEdit.id}` : '/create'\r\n\t})\r\n\tconst [{response, error, isLoading}, doApiFetch] = useApi(url);\r\n\tconst [done, setDone] = useState(() => taskToEdit ? getEditStatus(taskToEdit.status).done * 10 : 0);\r\n\t\r\n\tconst [adminEdit, setAdminEdit] = useState(() => taskToEdit ? getEditStatus(taskToEdit.status ).adminEdit : 0);\r\n\tconst [editedTask, setEditedTask] = useState(null);\r\n\t\r\n\tconst setFormValue = (e) => {\r\n\t\tconst {value, dataset: {field}} = e.currentTarget;\r\n\t\tif (taskToEdit && !adminEdit) setAdminEdit(1);\r\n\t\tdispatch(setFormData(field, value))\r\n\t}\r\n\t\r\n\tconst clearFormData = useCallback(() => {\r\n\t\tdispatch(clearForm());\r\n\t}, []);\r\n\t\r\n\tconst onSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst form = prepareForm(state);\r\n\t\tif (taskToEdit) {\r\n\t\t\tsetUrl(`/edit/${taskToEdit.id}`);\r\n\t\t\tform.append('status', (done+adminEdit).toString());\r\n\t\t\tform.append('token', token);\r\n\t\t}\r\n\t\tif (taskToEdit) {\r\n\t\t\tconst task = {...state, status: done+adminEdit};\r\n\t\t\tsetEditedTask(task);\r\n\t\t}\r\n\t\tawait doApiFetch({\r\n\t\t\tmethod: 'POST',\r\n\t\t\tform\r\n\t\t})\r\n\t\t\r\n\t\tclearFormData();\r\n\t\tsetId(null);\r\n\t}\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!taskToEdit) return;\r\n\t\tfor (let [field, value] of Object.entries(taskToEdit)) {\r\n\t\t\tdispatch(setFormData(field, value))\r\n\t\t}\r\n\t\tsetDone(getEditStatus(taskToEdit.status).done * 10);\r\n\t}, [taskToEdit]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!response && !error) return;\r\n\t\tif (error) {\r\n\t\t\tsetError(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (response.message) {\r\n\t\t\tsetTaskToState(response.message);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetEditedTaskToState(editedTask);\r\n\t\t\r\n\t\tsetUrl('/create');\r\n\t}, [editedTask, response, setEditedTaskToState, setTaskToState, error, setError]);\r\n\t\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName={'mb-3'}\r\n\t\t\tonSubmit={onSubmit}\r\n\t\t>\r\n\t\t\t<div className={'mb-3'}>\r\n\t\t\t\t<label htmlFor={'userName'} className={'form-label'}>User name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\tclassName={'form-control'}\r\n\t\t\t\t\tid={'userName'}\r\n\t\t\t\t\tdata-field={'username'}\r\n\t\t\t\t\tonChange={setFormValue}\r\n\t\t\t\t\tvalue={state.username || ''}\r\n\t\t\t\t\tdisabled={isLoading || taskToEdit}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={'mb-3'}>\r\n\t\t\t\t<label htmlFor=\"userEmail\" className=\"form-label\">Email</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"userEmail\"\r\n\t\t\t\t\tdata-field={'email'}\r\n\t\t\t\t\tonChange={setFormValue}\r\n\t\t\t\t\tvalue={state.email || ''}\r\n\t\t\t\t\tdisabled={isLoading || taskToEdit}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={'mb-3'}>\r\n\t\t\t\t<label htmlFor=\"taskText\" className=\"form-label\">Task text</label>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"taskText\"\r\n\t\t\t\t\tdata-field={'text'}\r\n\t\t\t\t\tonChange={setFormValue}\r\n\t\t\t\t\tvalue={state.text || ''}\r\n\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\ttaskToEdit &&\r\n\t\t\t\t<div className=\"form-check mb-3\">\r\n\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" checked={done === 10} id=\"done\" onChange={() => !done ? setDone(10) : setDone(0)} />\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"done\">\r\n\t\t\t\t\t\t\tDone task\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t>\r\n\t\t\t\t{isLoading && <span className=\"spinner-border spinner-border-sm\" role=\"status\"/>}\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport {getStatus} from \"./Task.status\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faEdit} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TaskRow = ({id, username, email, text, status, isLoggedIn, onEditClick}) => {\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<th scope={'row'}>{id}</th>\r\n\t\t\t<td>{username}</td>\r\n\t\t\t<td>{email}</td>\r\n\t\t\t<td>{text}</td>\r\n\t\t\t<td>{getStatus(status)}</td>\r\n\t\t\t{\r\n\t\t\t\tisLoggedIn &&\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\tclassName=\"btn btn-warning\"\r\n\t\t\t\t\t\tdata-id={id}\r\n\t\t\t\t\t\tonClick={onEditClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</td>\r\n\t\t\t}\r\n\t\t</tr>\r\n\t)\r\n}\r\n\r\nexport default TaskRow;\r\n","import React from 'react';\r\n\r\nconst Loading = ({loading}) => {\r\n\tif (!loading) {\r\n\t\treturn null\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"d-flex justify-content-center m-5\">\r\n\t\t\t<div className=\"spinner-border\" role=\"status\">\r\n\t\t\t\t<span className=\"visually-hidden\">Loading...</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport {ABC, DESC} from \"../../const/const\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSortDown, faSortUp} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TasksTableHead = ({names, sorting, sortTasks}) => {\r\n\treturn names.map((name, key) => {\r\n\t\tlet direction = ABC;\r\n\t\tif (name.toLowerCase() === sorting.field) {\r\n\t\t\tdirection = direction === sorting.direction ? DESC : ABC;\r\n\t\t}\r\n\t\t\r\n\t\tif (name.toLowerCase() === 'edit') {\r\n\t\t\treturn <th scope={'col'} key={key}>{name}</th>\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<th\r\n\t\t\t\tscope=\"col\"\r\n\t\t\t\tkey={key}\r\n\t\t\t>\r\n\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t\t<a\r\n\t\t\t\t\thref={''}\r\n\t\t\t\t\tonClick={sortTasks}\r\n\t\t\t\t\tdata-field={name.toLowerCase()}\r\n\t\t\t\t\tdata-direction={direction}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsorting.field === name.toLowerCase() &&\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={(direction === ABC ? faSortUp : faSortDown)} />\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</a>\r\n\t\t\t</th>\r\n\t\t)\r\n\t})\r\n}\r\n\r\nexport default TasksTableHead;\r\n","import React from 'react';\r\nimport TaskRow from \"./TaskRow.component\";\r\nimport Loading from \"../Loading/Loading.component\";\r\nimport TasksTableHead from \"./TasksTableHead.component\";\r\n\r\nconst TaskTable = ({tasks, loading, sorting, sortTasks, isLoggedIn, onEditClick}) => {\r\n\tif (loading) {\r\n\t\treturn <Loading loading={loading} />\r\n\t}\r\n\tconst tBody = tasks.map(task => {\r\n\t\treturn (\r\n\t\t\t<TaskRow key={task.id} isLoggedIn={isLoggedIn} {...task} onEditClick={onEditClick}/>\r\n\t\t)\r\n\t});\r\n\t\r\n\tconst names = ['id', 'Name', 'Email', 'Description', 'Status'];\r\n\t\r\n\tif (isLoggedIn) names.push('Edit');\r\n\t\r\n\treturn (\r\n\t\t<table className={'table'}>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<TasksTableHead names={names} sorting={sorting} sortTasks={sortTasks}/>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{!loading && tBody}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t)\r\n}\r\n\r\nexport default TaskTable;\r\n","import React from 'react';\r\n\r\nconst PageItem = ({className, i, onPageClick}) => {\r\n\treturn (\r\n\t\t<li className={className} key={i}>\r\n\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t<a\r\n\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\thref=\"\"\r\n\t\t\t\tdata-page={i}\r\n\t\t\t\tonClick={onPageClick}\r\n\t\t\t>\r\n\t\t\t\t{i}\r\n\t\t\t</a>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default PageItem;\r\n","import React from 'react';\r\nimport PageItem from \"./PageItem.component\";\r\nimport {TASK_PER_PAGE} from \"../../const/const\";\r\n\r\nconst Pagination = ({total, activePage, onPageClick}) => {\r\n\tconst count = Math.ceil(total/TASK_PER_PAGE);\r\n\t\r\n\tif (count === 1 || count === 0) {\r\n\t\treturn null\r\n\t}\r\n\t\r\n\tlet pagination = [];\r\n\tfor (let i=1; i<=count; i++) {\r\n\t\tconst className = i === activePage ? \"page-item active\" : \"page-item\";\r\n\t\tconst pageItem = <PageItem key={i} className={className} i={i} onPageClick={onPageClick} />\r\n\t\tpagination = [...pagination, pageItem];\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul className=\"pagination justify-content-center\">\r\n\t\t\t\t<li className={`page-item ${activePage === 1 ? 'disabled' : ''}`}>\r\n\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\t\t\tonClick={onPageClick}\r\n\t\t\t\t\t\tdata-direction={-1}\r\n\t\t\t\t\t\thref={''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPrev\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t{pagination}\r\n\t\t\t\t<li className={`page-item ${activePage === count ? 'disabled' : ''}`}>\r\n\t\t\t\t\t{/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\tclassName=\"page-link\"\r\n\t\t\t\t\t\tonClick={onPageClick}\r\n\t\t\t\t\t\tdata-direction={1}\r\n\t\t\t\t\t\thref={''}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar = ({isLoggedIn, logout}) => {\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<Link to={'/'} className={'navbar-brand'}>Home</Link>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t!isLoggedIn &&\r\n\t\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link to={'/login'} className={'nav-link'}>Login</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisLoggedIn &&\r\n\t\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<Link to={'/'} className={'nav-link'} onClick={logout}>Logout</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}\r\n\r\nexport default Navbar;\r\n","import React, {useCallback, useEffect, useReducer} from 'react';\r\nimport {prepareForm} from \"./Form.handlers\";\r\nimport useApi from \"../../hooks/useApi\";\r\nimport {reducer} from \"./Form.reducer\";\r\nimport {clearForm, setFormData} from \"../../store/actions\";\r\n\r\nconst initialState = {};\r\n\r\nconst FormLogin = ({setToken, setError}) => {\r\n\tconst [state, dispatch] = useReducer(reducer, initialState);\r\n\tconst [{response, error, isLoading}, doApiFetch] = useApi('/login');\r\n\t\r\n\tconst setFormValue = (e) => {\r\n\t\tconst {value, dataset: {field}} = e.currentTarget;\r\n\t\tdispatch(setFormData(field, value))\r\n\t}\r\n\t\r\n\tconst clearFormData = useCallback(() => {\r\n\t\tdispatch(clearForm());\r\n\t}, []);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!response && !error) return;\r\n\t\tif (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tsetError(error);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (response.message) {\r\n\t\t\tsetToken(response.message.token);\r\n\t\t}\r\n\t}, [response, setToken, error, setError]);\r\n\t\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName={'mb-3'}\r\n\t\t\tonSubmit={async (e) => {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tconst form = prepareForm(state);\r\n\t\t\t\tawait doApiFetch({\r\n\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\tform\r\n\t\t\t\t})\r\n\t\t\t\tclearFormData();\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className={'mb-3'}>\r\n\t\t\t\t<label htmlFor={'userName'} className={'form-label'}>User name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype={'text'}\r\n\t\t\t\t\tclassName={'form-control'}\r\n\t\t\t\t\tid={'userName'}\r\n\t\t\t\t\tdata-field={'username'}\r\n\t\t\t\t\tonChange={setFormValue}\r\n\t\t\t\t\tvalue={state.username || ''}\r\n\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={'mb-3'}>\r\n\t\t\t\t<label htmlFor=\"userPassword\" className=\"form-label\">Password</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"userPassword\"\r\n\t\t\t\t\tautoComplete={'false'}\r\n\t\t\t\t\tdata-field={'password'}\r\n\t\t\t\t\tonChange={setFormValue}\r\n\t\t\t\t\tvalue={state.password || ''}\r\n\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t>\r\n\t\t\t\t{isLoading && <span className=\"spinner-border spinner-border-sm\" role=\"status\"/>}\r\n\t\t\t\tLogin\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default FormLogin;\r\n","import {\r\n\tSET_ACTIVE_PAGE,\r\n\tSET_EDIT_ID,\r\n\tSET_EDITED_TASK, SET_ERROR,\r\n\tSET_TASK,\r\n\tSET_TASKS,\r\n\tSET_TOKEN,\r\n\tSORTING_TASKS\r\n} from \"./actionTypes\";\r\nimport {TASK_PER_PAGE} from \"../const/const\";\r\n\r\nexport const reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_ACTIVE_PAGE: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactivePage: action.payload.activePage\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SORTING_TASKS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsorting: {\r\n\t\t\t\t\tfield: action.payload.field,\r\n\t\t\t\t\tdirection: action.payload.direction\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_TASKS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: action.payload.tasks,\r\n\t\t\t\ttotalTaskCount: action.payload.totalTaskCount\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_TASK: {\r\n\t\t\tif (state.tasks.length === TASK_PER_PAGE) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\ttotalTaskCount: state.totalTaskCount + 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [...state.tasks, action.payload],\r\n\t\t\t\ttotalTaskCount: state.totalTaskCount + 1\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_EDITED_TASK: {\r\n\t\t\tconst idx = state.tasks.findIndex(task => {\r\n\t\t\t\treturn task.id === action.payload.task.id\r\n\t\t\t});\r\n\t\t\tlet tasksWithEditEl = state.tasks;\r\n\t\t\ttasksWithEditEl.splice(idx, 1, action.payload.task);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: tasksWithEditEl\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_TOKEN: {\r\n\t\t\tconst timestamp = new Date().getTime();\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttoken: action.payload.token,\r\n\t\t\t\ttimestamp\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_EDIT_ID: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttaskId: action.payload.taskId\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcase SET_ERROR: {\r\n\t\t\tlet errorMessages = [];\r\n\t\t\tif (typeof action.payload.error === \"object\") {\r\n\t\t\t\tfor (let [field, value] of Object.entries(action.payload.error)) {\r\n\t\t\t\t\terrorMessages.push(`${field} - ${value}`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeof action.payload.error === 'string') {\r\n\t\t\t\terrorMessages.push(action.payload.error)\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: errorMessages\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tdefault: {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst Alert = ({error, dismiss}) => {\r\n\tif (!error.length) return null;\r\n\tconst messages = error.map((message, key) => <p key={key}>{message}</p>)\r\n\treturn (\r\n\t\t<div className=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n\t\t\t{messages}\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"btn-close\"\r\n\t\t\t\tdata-bs-dismiss=\"alert\"\r\n\t\t\t\taria-label=\"Close\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tdismiss([])\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Alert;\r\n","import React, {useCallback, useEffect, useReducer, useState} from \"react\";\nimport Form from \"./components/Forms/Form.add.component\";\nimport TaskTable from \"./components/Tasks/TasksTable.component\";\nimport Pagination from \"./components/Pagination/Pagination.component\";\nimport {\n\tsetActivePage,\n\tsetEditedTask,\n\tsetEditId,\n\tsetError,\n\tsetTask,\n\tsetTasks,\n\tsetToken,\n\tsortingTasks\n} from \"./store/actions\";\nimport useApi from \"./hooks/useApi\";\nimport {TOKEN_LIFE_TIME} from \"./const/const\";\nimport Navbar from \"./components/Navbar/Navbar.component\";\nimport {BrowserRouter as Router, Redirect, Route, Switch} from \"react-router-dom\";\nimport FormLogin from \"./components/Forms/Form.login.component\";\nimport {reducer} from \"./store/reducer\";\nimport Alert from \"./components/Alert/Alert.component\";\n\nconst initialState = {\n\tactivePage: 1,\n\ttasks: [],\n\ttotalTaskCount: 0,\n\tsorting: {\n\t\tfield: 'id',\n\t\tdirection: 'abc'\n\t},\n\ttoken: null,\n\ttimestamp: null,\n\ttaskId: null,\n\terror: []\n}\n\nfunction App() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\tconst [{response, error, isLoading}, doApiFetch] = useApi('/');\n\tconst [fetchData, setFetchData] = useState(true);\n\t\n\tconst changeActivePage = (e) => {\n\t\te.preventDefault();\n\t\tconst {page = state.activePage, direction = 0} = e.currentTarget.dataset;\n\t\tconst pageNumber = +page + +direction;\n\t\tdispatch(setActivePage(pageNumber));\n\t\tsetFetchData(true);\n\t}\n\t\n\tconst sortTasks = (e) => {\n\t\te.preventDefault();\n\t\tconst {field, direction} = e.currentTarget.dataset;\n\t\tdispatch(sortingTasks(field, direction));\n\t\tsetFetchData(true);\n\t}\n\t\n\tconst setTasksToState = useCallback((tasks, total) => {\n\t\tdispatch(setTasks(tasks, total));\n\t}, []);\n\t\n\tconst setTaskToState = useCallback((task) => {\n\t\tdispatch(setTask(task));\n\t}, []);\n\t\n\tconst setEditedTaskToState = useCallback((task) => {\n\t\tdispatch(setEditedTask(task));\n\t}, [])\n\t\n\tconst setTokenToState = useCallback((token) => {\n\t\tdispatch(setToken(token))\n\t}, []);\n\t\n\tconst setId = useCallback((e) => {\n\t\tif (!e) {\n\t\t\tdispatch(setEditId(null));\n\t\t\treturn;\n\t\t}\n\t\tconst {id} = e.currentTarget.dataset;\n\t\tdispatch(setEditId(parseInt(id)))\n\t}, []);\n\t\n\tconst setErrorMessage = useCallback((error) => {\n\t\tdispatch(setError(error))\n\t}, []);\n\t\n\tconst getTaskToEdit = (id, tasks) => {\n\t\tconst idx = tasks.findIndex(task => task.id === id);\n\t\treturn tasks[idx];\n\t}\n\t\n\tconst getLoggedIn = (token, timestamp) => {\n\t\tif (!token || !timestamp) return false;\n\t\tif (token && timestamp) {\n\t\t\tconst now = new Date().getTime();\n\t\t\treturn now - timestamp < TOKEN_LIFE_TIME\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tconst logout = () => {\n\t\tdispatch(setToken(null));\n\t}\n\t\n\tconst isLoggedIn = getLoggedIn(state.token, state.timestamp);\n\t\n\tconst taskToEdit = getTaskToEdit(state.taskId, state.tasks);\n\t\n\tuseEffect(() => {\n\t\tif (!fetchData) return;\n\t\tconst {activePage, sorting: {field, direction}} = state;\n\t\tdoApiFetch({\n\t\t\tparams: {\n\t\t\t\tsort_field: field,\n\t\t\t\tsort_direction: direction,\n\t\t\t\tpage: activePage.toString()\n\t\t\t}\n\t\t});\n\t\tsetFetchData(false);\n\t}, [doApiFetch, response, state, fetchData]);\n\t\n\tuseEffect(() => {\n\t\tif (!response && !error) return;\n\t\tif (error) {\n\t\t\tsetErrorMessage(error)\n\t\t}\n\t\tif (response && response.message) {\n\t\t\tconst {message: {tasks, total_task_count: totalTaskCount}} = response;\n\t\t\tsetTasksToState(tasks, totalTaskCount);\n\t\t}\n\t}, [response, error, setTasksToState, setErrorMessage]);\n\t\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<Navbar isLoggedIn={isLoggedIn} logout={logout}/>\n\t\t\t\t<div className={'container'}>\n\t\t\t\t\t<div className={'row'}>\n\t\t\t\t\t\t<div className={'col'}>\n\t\t\t\t\t\t\t<Alert error={state.error} dismiss={setErrorMessage}/>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path={'/login'}>\n\t\t\t\t\t\t\t\t\t{isLoggedIn ? <Redirect to=\"/\"/> : <FormLogin setToken={setTokenToState} setError={setErrorMessage}/>}\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<Route path={'/'}>\n\t\t\t\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\t\t\t\tsetTaskToState={setTaskToState}\n\t\t\t\t\t\t\t\t\t\tsetEditedTaskToState={setEditedTaskToState}\n\t\t\t\t\t\t\t\t\t\ttaskToEdit={taskToEdit}\n\t\t\t\t\t\t\t\t\t\tsetId={setId}\n\t\t\t\t\t\t\t\t\t\ttoken={state.token}\n\t\t\t\t\t\t\t\t\t\tsetError={setErrorMessage}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<TaskTable\n\t\t\t\t\t\t\t\t\t\ttasks={state.tasks}\n\t\t\t\t\t\t\t\t\t\tloading={isLoading}\n\t\t\t\t\t\t\t\t\t\tsortTasks={sortTasks}\n\t\t\t\t\t\t\t\t\t\tsorting={state.sorting}\n\t\t\t\t\t\t\t\t\t\tisLoggedIn={isLoggedIn}\n\t\t\t\t\t\t\t\t\t\tonEditClick={setId}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\ttotal={state.totalTaskCount}\n\t\t\t\t\t\t\t\t\t\tactivePage={state.activePage}\n\t\t\t\t\t\t\t\t\t\tonPageClick={changeActivePage}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}